{
    "spi-nor": { // Device, The name should be the same with string in image:info:media:type
        "size": "16m", // Size of SPI NOR
        "partitions": {
            "spl":        { "size": "512k" },
            "env":        { "size": "128k" },
            "env_r":      { "size": "128k" },
            "os":         { "size": "2m" },
            "rodata":     { "size": "12m" },
            "data":       { "size": "1m" }
        },
    },
    "image": {
        "info": { // Header information about image
            "platform": "d13x",
            "product": "demo88-nor-secure",
            "version": "1.0.0",
            "media": {
                "type": "spi-nor",
                "device_id": 0,
            }
        },
        "updater": { // Image writer which is downloaded to RAM by USB
            "psram": {
                "file": "usbupg-psram-init.aic",
                "attr": ["required", "run"],
                "ram": "0x30044000"
            },
            "spl": {
                "file": "bootloader.aic",
                "attr": ["required", "run"],
                "ram": "0x40100000"
            },
        },
        "target": { // Image components which will be burn to device's partitions
            "spl": {
                "file": "bootloader.aic.enc",
                "attr": ["mtd", "required"],
                "part": ["spl"]
            },
            "env": {
                "file": "env.bin.enc",
                "attr": ["mtd", "optional"],
                "part": ["env","env_r"]
            },
            "os": {
                "file": "d13x_os.itb.enc",
                "attr": ["mtd", "required"],
                "part": ["os"]
            },
            "rodata": {
                "file": "rodata.fatfs.enc",
                "attr": ["mtd", "optional"],
                "part": ["rodata"]
            },
            "data": {
                "file": "data.lfs.enc",
                "attr": ["mtd", "optional"],
                "part": ["data"]
            },
        },
    },
    "pre-process": { // Pre-proccess to generate image components from raw data
        "aicimage": { // Create aic boot image
            "usbupg-psram-init.aic": { // No loader, only PreBootProgram to initialize PSRAM
                "head_ver": "0x00010001",
                "resource": {
                    "private": "pbp_cfg.bin",
                    "pubkey": "keys/rsa_public_key.der",
                    "pbp": "d13x.pbp",
                },
                "encryption": {
                    "algo": "aes-128-cbc",
                    "key": "keys/aes-128-cbc-key.bin",
                    "iv": "keys/aes-128-cbc-iv.bin",
                },
		"ssk_derived_key": "true",
                "signature": {
                    "algo": "rsa,2048",
                    "privkey": "keys/rsa_private_key.der",
                },
            },
            "pbp_ext.aic": {
                "head_ver": "0x00010001",
                "resource": {
                    "pbp": "d13x.pbp",
                    "pubkey": "keys/rsa_public_key.der",
                    "private": "pbp_cfg.bin",
                },
                "encryption": {
                    "algo": "aes-128-cbc",
                    "key": "keys/aes-128-cbc-key.bin",
                    "iv": "keys/aes-128-cbc-iv.bin",
                },
		"ssk_derived_key": "true",
                "signature": {
                    "algo": "rsa,2048",
                    "privkey": "keys/rsa_private_key.der",
                },
                // combine to use with loader.aic
                "with_ext": "true",
            },
            "loader.aic": {
                "head_ver": "0x00010001",
                "loader": {
                    "file": "bootloader.bin",
                    "load address": "CONFIG_AIC_BOOTLOADER_LOAD_BASE",
                    "entry point": "CONFIG_AIC_BOOTLOADER_TEXT_BASE", // 256 byte aic header
                },
                "resource": {
                    "private": "pbp_cfg.bin",
                    "pubkey": "keys/rsa_public_key.der",
                },
                "encryption": {
                    "algo": "aes-128-cbc",
                    "key": "keys/aes-128-cbc-key.bin",
                    "iv": "keys/aes-128-cbc-iv.bin",
                },
		"ssk_derived_key": "true",
                "signature": {
                    "algo": "rsa,2048",
                    "privkey": "keys/rsa_private_key.der",
                },
            },
        },
        "concatenate": { // cat files in order
            "bootloader.aic": ["pbp_ext.aic", "loader.aic"],
        },
        "itb": { // Create itb image from its
            "d13x_os.itb": {
                "its": "d13x_os.its"
            },
        },
        "uboot_env": { // Create env data from txt
            "env.bin": {
                "file": "env.txt",
                "size": "4096",
                "redundant": "enable",
            },
        },
        "data_crypt": {
            "bootloader.aic.enc": {
                "algo": "spienc-aes-128-ecb",
                "file": "bootloader.aic", // File to be encrypted
                "key": "keys/spi_aes.key", // Keys the same in eFuse
                "nonce": "keys/spi_nonce.key", // Nonce the same in eFuse
                "tweak": "0",
            },
            "env.bin.enc": {
                "algo": "spienc-aes-128-ecb",
                "file": "env.bin", // File to be encrypted
                "key": "keys/spi_aes.key", // Keys the same in eFuse
                "nonce": "keys/spi_nonce.key", // Nonce the same in eFuse
                "tweak": "0",
            },
            "d13x_os.itb.enc": {
                "algo": "spienc-aes-128-ecb",
                "file": "d13x_os.itb", // File to be encrypted
                "key": "keys/spi_aes.key", // Keys the same in eFuse
                "nonce": "keys/spi_nonce.key", // Nonce the same in eFuse
                "tweak": "0",
            },
            "rodata.fatfs.enc": {
                "algo": "spienc-aes-128-ecb",
                "file": "rodata.fatfs", // File to be encrypted
                "key": "keys/spi_aes.key", // Keys the same in eFuse
                "nonce": "keys/spi_nonce.key", // Nonce the same in eFuse
                "tweak": "0",
            },
            "data.lfs.enc": {
                "algo": "spienc-aes-128-ecb",
                "file": "data.lfs", // File to be encrypted
                "key": "keys/spi_aes.key", // Keys the same in eFuse
                "nonce": "keys/spi_nonce.key", // Nonce the same in eFuse
                "tweak": "0",
            },
	},
    },
}
